const SkillBaseHandler = require('./SkillBaseHandler');
module.exports = class <%- className %> extends SkillBaseHandler {

    <% if ((!requestType) || (requestType === 'IntentRequest')) { %>
    static intentName() {
        return '<%- intentName %>';
    }
    <% } else { %>
    static requestType() {
        return '<%- requestType %>';
    }
    <% } %>

    process() {
        let updateState = <%-requestMergeState;%>;
        <% for (let i = 0; i < conditionalResponses.length; i++) {
            let item = conditionalResponses[i];
            responseKey = item.responseKey; %>
            <% if (i === 0) { %>if <% } else { %> else if <% } %>(this.stateMatches(<%-item.stateMatch %>, '<%-responseKey%>')) {
                updateState = Object.assign(updateState, <%- mergeStates[responseKey] ? mergeStates[responseKey] : '{}' %>);
                return this.setState(updateState)
                    .then(() => {
                        return this.templateRespond(
                        '<%- responseKey %>',
                        null,
                        <%- endSessionMap[responseKey] %>
                    );
                });
            }

        <% } %>
        <% if (conditionalResponses.length > 0) { %> else {<% } %>
        // Default Response
            updateState = Object.assign(updateState, {'last-response-id': '<%- defaultResponseKey %>'});
            return this.setState(updateState)
                .then(() => {
                    return this.templateRespond(
                    '<%- defaultResponseKey %>',
                    null,
                    <%- endSessionMap[defaultResponseKey] %>
                    );
                });
        <% if (conditionalResponses.length > 0) { %> } <% } %>
    }
};